# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: ""
    version: 0.0.1
paths:
    /auth/activate/{userId}:
        post:
            tags:
                - Auth
            operationId: Auth_Activate
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/auth.v1.ActivateRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
    /auth/healthcheck:
        get:
            tags:
                - HealthCheck
            operationId: HealthCheck_HealthCheck
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
    /auth/logout:
        post:
            tags:
                - Auth
            operationId: Auth_Logout
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/auth.v1.LogoutRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
    /auth/register:
        post:
            tags:
                - Auth
            operationId: Auth_Register
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/auth.v1.GrantRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/auth.v1.GrantAccess'
    /auth/token:
        post:
            tags:
                - Auth
            operationId: Auth_Token
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/auth.v1.GrantRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/auth.v1.GrantAccess'
components:
    schemas:
        auth.v1.ActivateRequest:
            type: object
            properties:
                userId:
                    type: string
        auth.v1.GrantAccess:
            type: object
            properties:
                accessToken:
                    type: string
                refreshToken:
                    type: string
                subject:
                    type: string
                expiredIn:
                    $ref: '#/components/schemas/google.protobuf.Duration'
                issuedAt:
                    type: string
                    format: date-time
                expiredAt:
                    type: string
                    format: date-time
                clientId:
                    type: string
            description: The response message containing the greetings
        auth.v1.GrantRequest:
            type: object
            properties:
                grantType:
                    type: string
                clientId:
                    type: string
                provider:
                    type: string
                accessToken:
                    type: string
                username:
                    type: string
                password:
                    type: string
                phoneNumber:
                    type: string
                email:
                    type: string
                refreshToken:
                    type: string
        auth.v1.LogoutRequest:
            type: object
            properties:
                refreshToken:
                    type: string
        google.protobuf.Duration:
            type: object
            properties:
                seconds:
                    type: integer
                    description: 'Signed seconds of the span of time. Must be from -315,576,000,000 to +315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years'
                    format: int64
                nanos:
                    type: integer
                    description: Signed fractions of a second at nanosecond resolution of the span of time. Durations less than one second are represented with a 0 `seconds` field and a positive or negative `nanos` field. For durations of one second or more, a non-zero value for the `nanos` field must be of the same sign as the `seconds` field. Must be from -999,999,999 to +999,999,999 inclusive.
                    format: int32
            description: 'A Duration represents a signed, fixed-length span of time represented as a count of seconds and fractions of seconds at nanosecond resolution. It is independent of any calendar and concepts like "day" or "month". It is related to Timestamp in that the difference between two Timestamp values is a Duration and it can be added or subtracted from a Timestamp. Range is approximately +-10,000 years. # Examples Example 1: Compute Duration from two Timestamps in pseudo code.     Timestamp start = ...;     Timestamp end = ...;     Duration duration = ...;     duration.seconds = end.seconds - start.seconds;     duration.nanos = end.nanos - start.nanos;     if (duration.seconds < 0 && duration.nanos > 0) {       duration.seconds += 1;       duration.nanos -= 1000000000;     } else if (duration.seconds > 0 && duration.nanos < 0) {       duration.seconds -= 1;       duration.nanos += 1000000000;     } Example 2: Compute Timestamp from Timestamp + Duration in pseudo code.     Timestamp start = ...;     Duration duration = ...;     Timestamp end = ...;     end.seconds = start.seconds + duration.seconds;     end.nanos = start.nanos + duration.nanos;     if (end.nanos < 0) {       end.seconds -= 1;       end.nanos += 1000000000;     } else if (end.nanos >= 1000000000) {       end.seconds += 1;       end.nanos -= 1000000000;     } Example 3: Compute Duration from datetime.timedelta in Python.     td = datetime.timedelta(days=3, minutes=10)     duration = Duration()     duration.FromTimedelta(td) # JSON Mapping In JSON format, the Duration type is encoded as a string rather than an object, where the string ends in the suffix "s" (indicating seconds) and is preceded by the number of seconds, with nanoseconds expressed as fractional seconds. For example, 3 seconds with 0 nanoseconds should be encoded in JSON format as "3s", while 3 seconds and 1 nanosecond should be expressed in JSON format as "3.000000001s", and 3 seconds and 1 microsecond should be expressed in JSON format as "3.000001s".'
tags:
    - name: Auth
    - name: HealthCheck
